#!/bin/sh

die(){
    echo $1
    exit 1
}

confirmyes(){
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [Y/n]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        [nN][oO]|[nN])
            false
            ;;
        *)
            true
            ;;
    esac
}

confirmno(){
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}

# Get kernel version numbers

    SHORT_KERNEL=$( echo `uname -r` | grep -o '[[:digit:]]\+\.[[:digit:]]\+' )
    FIRST_DIGIT=$( echo `uname -r` | grep -o '[[:digit:]]\+' | head -n1 )
    SECOND_DIGIT=$( echo `uname -r` | grep -o '[[:digit:]]\+' | head -n2 | awk 'NR==2' )
    PATCHLEVEL=$( echo `uname -r` | grep -o '[[:digit:]]\+' | head -n3 | awk 'NR==3' )

# Get OS and release info

    OS=$( lsb_release -si )
    RELEASE=$( lsb_release -sc )

# Define where to build and from what dir to build

    BUILD_DIR=/lib/modules/`uname -r`/build
    TEMPDIR=/usr/src/$SHORT_KERNEL


# Abort if running kernel is < 3.x

if [ $FIRST_DIGIT -lt 3 ]; then
  echo "The kernel you are running is not supported anymore.\n\nMinimum supported version is 3.x\n\nAborting..."
  exit 1
fi

# Install build dependencies for FFdecsawrapper

if echo $OS | grep 'Debian' 2>&1 1>/dev/null; then

  if ! dpkg-query -l libv4l-dev > /dev/null 2>&1; then
    echo "
Missing dependency libv4l-dev, marking for installation.
"
    apt-get install libv4l-dev -y || die "Error installing dependency libv4l-dev"
  fi

  if ! dpkg-query -l libproc-processtable-perl > /dev/null 2>&1; then
    echo "
Missing dependency libproc-processtable-perl, marking for installation.
"
    apt-get install libproc-processtable-perl -y || die "Error installing dependency libproc-processtable-perl"
  fi

  if ! dpkg-query -l libssl-dev > /dev/null 2>&1; then
    echo "
Missing dependency libssl-dev, marking for installation.
"
    apt-get install libssl-dev -y || die "Error installing dependency libssl-dev"
  fi

  if ! dpkg-query -l build-essential > /dev/null 2>&1; then
    echo "
Missing dependency build-essential, marking for installation.
"
    apt-get install build-essential -y || die "Error installing dependency build-essential"
  fi

  if uname -a | grep 'Debian' > /dev/null  2>&1; then
    if ! dpkg-query -l linux-headers-`uname -r` > /dev/null 2>&1; then
      echo "
Missing dependency linux-headers-`uname -r`, marking for installation.
"
      apt-get install linux-headers-`uname -r` -y  || die "Error installing dependency linux-headers-`uname -r`"
    fi
  fi

# When using FFdecsawrapper, the kernel has to be patched.
# Let's do it.

  echo "\nFFdecsawrapper needs a patched dvb-core.ko kernel module.\nIf you are running a !!!UNMODIFIED!!! Debian kernel (including those frome 'backports' or other branches, like 'sid'), I can do that for you, if your sources.list is ok and the source for your kernel is available in the repo's.\n\n"

  confirmyes "Do you want me to patch your running Debian kernel?[Y/n]"

  if [ $(echo $?) -eq 0 ]; then

    echo "

   WARNING!!!

   If you have more then 4 DVB adapters, or planning to use more then 4,
   your kernel cannot be patched.
   So if you did not do so allready,
   recompile your kernel with apropiate dvb-mutex patch,
   and 'CONFIG_DVB_MAX_ADAPTERS=<twice your adapters>'


Do you want me to install linux-source-$SHORT_KERNEL?
This will remove any previously installed
linux-source packages and (re)install
the source for your current kernel.

Having done that, your running Debian kernel
will be patched for use with ffdecsawrapper.

Don't forget to reboot to load new module once you are
done patching the kernel and compiling ffdecsawrapper and ffdecsawrapper module.
"

    confirmyes "Proceed?[Y/n]"

# Install build dependencies for patching the kernel

    if [ $(echo $?) -eq 0 ]; then
      apt-get purge linux-source* -y && apt-get build-dep linux --no-install-recommends -y
      apt-get install linux-source-$SHORT_KERNEL -y || die "Error installing linux-source-$SHORT_KERNEL"

# Compile the patched dvb-core.ko module and install it

      echo "
Building patched dvb-core module for kernel `uname -r`

Preparing, this may take a while...
"
      rm -rf $TEMPDIR
      mkdir -p $TEMPDIR
      if  [ $FIRST_DIGIT -eq 3 ]; then
        if [ $SECOND_DIGIT -lt 7 ]; then
          if  test -f /usr/src/linux-source-$SHORT_KERNEL.tar.bz2; then
            tar -xjf /usr/src/linux-source-$SHORT_KERNEL.tar.bz2 -C $TEMPDIR --strip-components 5 linux-source-$SHORT_KERNEL/drivers/media/dvb/dvb-core/
          elif test -f /usr/src/linux-source-$SHORT_KERNEL.tar.xz; then
            tar -xJf /usr/src/linux-source-$SHORT_KERNEL.tar.xz -C $TEMPDIR --strip-components 5 linux-source-$SHORT_KERNEL/drivers/media/dvb/dvb-core/
          fi
          echo "
Building and installing, please be patient...
"
          patch -p5 -d $TEMPDIR < linux-2.6.38-dvb-mutex.patch > /dev/null 2>&1
          make -C $BUILD_DIR M=$TEMPDIR modules
          mkdir -p /lib/modules/`uname -r`/updates > /dev/null 2>&1
          /usr/bin/install $TEMPDIR/dvb-core.ko /lib/modules/`uname -r`/updates
          rm -rf $TEMPDIR
          depmod -a
        else
          if  test -f /usr/src/linux-source-$SHORT_KERNEL.tar.bz2; then
            tar -xjf /usr/src/linux-source-$SHORT_KERNEL.tar.bz2 -C $TEMPDIR --strip-components 4 linux-source-$SHORT_KERNEL/drivers/media/dvb-core/
          elif test -f /usr/src/linux-source-$SHORT_KERNEL.tar.xz; then
            tar -xJf /usr/src/linux-source-$SHORT_KERNEL.tar.xz -C $TEMPDIR --strip-components 4 linux-source-$SHORT_KERNEL/drivers/media/dvb-core/
          fi
          echo "
Building and installing, please be patient...
"
          patch -p4 -d $TEMPDIR < linux-3.7.1-dvb-mutex.patch > /dev/null 2>&1
          make -C $BUILD_DIR M=$TEMPDIR modules
          mkdir -p /lib/modules/`uname -r`/updates > /dev/null 2>&1
          /usr/bin/install $TEMPDIR/dvb-core.ko /lib/modules/`uname -r`/updates
          rm -rf $TEMPDIR
          depmod -a
        fi
      fi
    fi
  fi
fi
